import { test, expect } from '@playwright/test';
import { HomePage } from '../pages/HomePage';
import { SearchResultsPage } from '../pages/SearchResultsPage';
import { ProductPage } from '../pages/ProductPage';
import { CartPage } from '../pages/CartPage';

//POM DESIGN PATTERN 
test('Recherche et commande d\'un bonnet sur Decathlon', async ({ page }) => {
    // Initialiser les pages
    const homePage = new HomePage(page);
    const searchResultsPage = new SearchResultsPage(page);
    const productPage = new ProductPage(page);
    const cartPage = new CartPage(page);

    // √âtape 1 : Aller sur la page d'accueil et accepter les cookies
    await homePage.navigateToHome();
    console.log('1Ô∏è‚É£ Acc√®s √† la page d\'accueil ');
    // √âtape 2 : Accepter les cookies (si n√©cessaire)
    await homePage.acceptCookies();
    console.log('2Ô∏è‚É£ Cookies accept√©s.');

    // √âtape 3 : Rechercher un bonnet
    await homePage.searchProduct('bonnet');
    await searchResultsPage.waitForResults();
    console.log('3Ô∏è‚É£ Recherche de bonnet effectu√©e.');

    // √âtape 4 : S√©lectionner un produit (le premier de la liste)
    const selectedProductTitle = await searchResultsPage.selectFirstProduct();
    expect(selectedProductTitle).not.toBeNull();
    console.log(`4Ô∏è‚É£ Produit s√©lectionn√© : ${selectedProductTitle}`);

    // √âtape 5 : Ajouter au panier
    await productPage.addToCart();
    console.log('5Ô∏è‚É£ Produit ajout√© au panier.');

    // √âtape 6 : Acc√©der au panier
    await cartPage.goToCart();
    console.log('6Ô∏è‚É£ Acc√®s au panier.');

    // √âtape 7 : Simuler une commande
    await cartPage.proceedToCheckout();
    console.log('7Ô∏è‚É£ Simuler une commande');

    // √âtape 8 : V√©rifier la redirection vers la page de connexion ou de paiement
    await expect(page).toHaveURL(/login/i);
    console.log('üéâ Test 3 termin√© avec succ√®s : les √©tapes de commande sont fonctionnelles.');
});
